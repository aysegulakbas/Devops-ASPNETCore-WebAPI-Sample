pipeline {
    agent any
    environment {
        PATH = "/usr/local/bin:/usr/local/share/dotnet:$PATH" // Docker ve .NET Core'un yüklü olduğu yolları güncelleyin
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Setup .NET Core') {
            steps {
                sh 'dotnet --version'
            }
        }
        stage('Build with dotnet') {
            steps {
                sh 'dotnet build --configuration Release'
            }
        }
        stage('Publish with dotnet') {
            steps {
                sh 'dotnet publish --configuration Release --output ./publish'
            }
        }
        stage('Login to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub_credentials') {
                        // Docker Hub işlemleri burada
                    }
                }
            }
        }
        stage('Build and Push Docker Image') {
            steps {
                script {
                    def customImage = docker.build("aysegulakbaas/samplewebapiaspnetcore:latest", "--target runtime .")
                    customImage.push("latest")
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                sh '''
                kubectl apply -f SampleWebApiAspNetCore/Deployment/deployment.yaml
                kubectl apply -f SampleWebApiAspNetCore/Deployment/ingress.yaml
                kubectl apply -f SampleWebApiAspNetCore/Deployment/service.yaml
                '''
            }
        }
    }
}
