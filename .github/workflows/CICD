name: Docker Image CI

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'  # veya projenize uygun .NET sürümünü belirtin

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

      - name: Publish project
        run: dotnet publish --configuration Release --output ./out

      - name: Build Docker image
        run: |
          docker build -t your-dockerhub-username/sample-web-api:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker image
        run: |
          docker push aysegulakbaas/samplewebapiaspnetcore:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: '1.23.0'  # veya uygun kubectl sürümünü belirtin

      - name: Set up Kubernetes context
        run: |
          kubectl config set-cluster your-cluster --server=${{ secrets.KUBE_SERVER }} --certificate-authority=${{ secrets.KUBE_CA }}
          kubectl config set-credentials your-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context your-context --cluster=your-cluster --user=your-user
          kubectl config use-context your-context

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl apply -f ingress.yaml
